#!/usr/bin/env python3

import sqlite3
from shutil import rmtree
from pathlib import Path
from urllib import request, parse
from subprocess import check_call

root = Path(__file__).parent / "vulns"
vulns_path = root / "vulns.db"
vulns_db = None
cve_path = root / "cve"
cve_git_url = "https://github.com/CVEProject/cvelistV5.git"
osv_path = root / "osv"
osv_url = "https://osv-vulnerabilities.storage.googleapis.com/all.zip"

def setup():
    if root.exists():
        rmtree(root)
    osv_path.mkdir(parents=True)
    # remove old data # TODO Replace with better solution later

def init():
    # DB
    vulns_db = sqlite3.connect(vulns_path)
    cur = vulns_db.cursor()
    cur.execute("CREATE TABLE vulns(type, vendor, product, lt, lte, eq, gt, gte, vulnerability)")
    cur.close()
    # osv
    request.urlretrieve(osv_url, osv_path / "all.zip")
    check_call(f"cd {osv_path} && unzip -x all.zip", shell=True)
    # nvd
    check_call(f"cd {root} && git clone --depth 1 --single-branch {cve_git_url} cve", shell=True)

if __name__ == '__main__':
    setup()
    init()

